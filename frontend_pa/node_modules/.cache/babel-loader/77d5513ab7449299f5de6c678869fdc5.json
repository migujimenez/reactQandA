{"ast":null,"code":"var _jsxFileName = \"/Users/migueljimenez/Projects/QandA/frontend/src/QuestionPage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { Page } from './Page';\nimport { useParams } from 'react-router';\nimport { getQuestion } from './QuestionData';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n\n  const [question, setQuestion] = React.useState(null);\n  const {\n    questionId\n  } = useParams();\n  React.useEffect(() => {\n    const doGetQuestion = async questionId => {\n      const foundQuestion = await getQuestion(questionId);\n      setQuestion(foundQuestion);\n    };\n\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n  }, [questionId]);\n  return _jsxDEV(Page, {\n    children: [\"Question Page \", questionId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(QuestionPage, \"E2RtnRGDkgwA3yFmVis5dwE2hPg=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/QuestionPage.tsx"],"names":["Page","useParams","getQuestion","React","QuestionPage","question","setQuestion","useState","questionId","useEffect","doGetQuestion","foundQuestion","Number"],"mappings":";;;AAAA;AAGA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAuBC,WAAvB,QAA0C,gBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,KAAK,CAACI,QAAN,CAAoC,IAApC,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBP,SAAS,EAAhC;AAEAE,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAMC,aAAa,GAAG,MAAOF,UAAP,IAA8B;AAClD,YAAMG,aAAa,GAAG,MAAMT,WAAW,CAACM,UAAD,CAAvC;AACAF,MAAAA,WAAW,CAACK,aAAD,CAAX;AACD,KAHD;;AAIA,QAAIH,UAAJ,EAAgB;AACdE,MAAAA,aAAa,CAACE,MAAM,CAACJ,UAAD,CAAP,CAAb;AACD;AACF,GARD,EAQG,CAACA,UAAD,CARH;AAUA,SAAO,QAAC,IAAD;AAAA,iCAAqBA,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfM;;GAAMJ,Y;UAEYH,S;;;KAFZG,Y","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { gray3, gray6 } from './Styles';\nimport { Page } from './Page';\nimport { useParams } from 'react-router';\nimport { QuestionData, getQuestion } from './QuestionData';\nimport React from 'react';\n\nexport const QuestionPage = () => {\n  const [question, setQuestion] = React.useState<QuestionData | null>(null);\n  const { questionId } = useParams();\n\n  React.useEffect(() => {\n    const doGetQuestion = async (questionId: number) => {\n      const foundQuestion = await getQuestion(questionId);\n      setQuestion(foundQuestion);\n    };\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n  }, [questionId]);\n\n  return <Page>Question Page {questionId}</Page>;\n};\n"]},"metadata":{},"sourceType":"module"}