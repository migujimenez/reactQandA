{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/migueljimenez/Projects/QandA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import{Question}from'./Question';import{accent2,gray5}from'./Styles';import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";export var QuestionList=function QuestionList(_ref){var data=_ref.data,renderItem=_ref.renderItem;return _jsx(\"ul\",{css:css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n      list-style: none;\\n      margin: 10px 0 0 0;\\n      padding: 0px 20px;\\n      background-color: #fff;\\n      border-bottom-left-radius: 4px;\\n      border-bottom-right-radius: 4px;\\n      border-top: 3px solid \",\";\\n      box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\\n    \"])),accent2),children:data.map(function(question){return _jsx(\"li\",{css:css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n          border-top: 1px solid \",\";\\n          ::first-of-type {\\n            border-top: none;\\n          }\\n        \"])),gray5),children:renderItem?renderItem(question):_jsx(Question,{data:question})},question.questionId);})});};","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/QuestionList.tsx"],"names":["css","Question","accent2","gray5","QuestionList","data","renderItem","map","question","questionId"],"mappings":"wNAAA,sCACA,OAASA,GAAT,KAAoB,gBAApB,CAEA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,OAAT,CAAkBC,KAAlB,KAA+B,UAA/B,C,oDAOA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,IAAH,MAAGA,IAAH,CAASC,UAAT,MAASA,UAAT,OAC1B,YACE,GAAG,CAAEN,GAAF,yVAOuBE,OAPvB,CADL,UAYGG,IAAI,CAACE,GAAL,CAAS,SAACC,QAAD,QACR,YAEE,GAAG,CAAER,GAAF,4LACuBG,KADvB,CAFL,UASGG,UAAU,CAAGA,UAAU,CAACE,QAAD,CAAb,CAA0B,KAAC,QAAD,EAAU,IAAI,CAAEA,QAAhB,EATvC,EACOA,QAAQ,CAACC,UADhB,CADQ,EAAT,CAZH,EAD0B,EAArB","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { QuestionData } from './QuestionData';\nimport { Question } from './Question';\nimport { accent2, gray5 } from './Styles';\n\ninterface Props {\n  data: QuestionData[];\n  renderItem?: (item: QuestionData) => JSX.Element;\n}\n\nexport const QuestionList = ({ data, renderItem }: Props) => (\n  <ul\n    css={css`\n      list-style: none;\n      margin: 10px 0 0 0;\n      padding: 0px 20px;\n      background-color: #fff;\n      border-bottom-left-radius: 4px;\n      border-bottom-right-radius: 4px;\n      border-top: 3px solid ${accent2};\n      box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n    `}\n  >\n    {data.map((question) => (\n      <li\n        key={question.questionId}\n        css={css`\n          border-top: 1px solid ${gray5};\n          ::first-of-type {\n            border-top: none;\n          }\n        `}\n      >\n        {renderItem ? renderItem(question) : <Question data={question} />}\n      </li>\n    ))}\n  </ul>\n);\n"]},"metadata":{},"sourceType":"module"}