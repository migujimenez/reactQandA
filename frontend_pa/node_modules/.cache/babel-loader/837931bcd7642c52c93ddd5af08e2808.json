{"ast":null,"code":"import _objectSpread from\"/Users/migueljimenez/Projects/QandA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/Users/migueljimenez/Projects/QandA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"/Users/migueljimenez/Projects/QandA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/migueljimenez/Projects/QandA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/migueljimenez/Projects/QandA/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import{gray3,gray6,FieldSet,FieldContainer,FieldLabel,FieldTextArea,FormButtonContainer,PrimaryButton}from'./Styles';import{Page}from'./Page';import{useParams}from'react-router';import{getQuestion}from'./QuestionData';import{AnswerList}from'./AnswerList';import React from'react';import{useForm}from'react-hook-form';import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";import{jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";export var QuestionPage=function QuestionPage(){var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),question=_React$useState2[0],setQuestion=_React$useState2[1];var _useParams=useParams(),questionId=_useParams.questionId;var _useForm=useForm(),register=_useForm.register;React.useEffect(function(){var doGetQuestion=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(questionId){var foundQuestion;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getQuestion(questionId);case 2:foundQuestion=_context.sent;setQuestion(foundQuestion);case 4:case\"end\":return _context.stop();}}},_callee);}));return function doGetQuestion(_x){return _ref.apply(this,arguments);};}();if(questionId){doGetQuestion(Number(questionId));}},[questionId]);return _jsx(Page,{children:_jsxs(\"div\",{css:css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n          background-color: white;\\n          padding: 15px 20px 20px 20px;\\n          border-radius: 4px;\\n          border: 1px solid \",\";\\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\\n        \"])),gray6),children:[_jsx(\"div\",{css:css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n            font-size: 19px;\\n            font-weight: bold;\\n            margin: 10px 0px 5px;\\n          \"]))),children:question===null?'':question.title}),question!==null&&_jsxs(React.Fragment,{children:[_jsx(\"p\",{css:css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n                margin-top: 0px;\\n                background-color: white;\\n              \"]))),children:question.content}),_jsx(\"div\",{css:css(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n                font-size: 12px;\\n                font-style: italic;\\n                color: \",\";\\n              \"])),gray3),children:\"Asked by Lerox \".concat(question.userName,\" on\\n  \").concat(question.created.toLocaleDateString(),\" \\n  \").concat(question.created.toLocaleTimeString())}),_jsx(AnswerList,{data:question.answers}),_jsx(\"form\",{css:css(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n                margin-top: 20px;\\n              \"]))),children:_jsxs(FieldSet,{children:[_jsxs(FieldContainer,{children:[_jsx(FieldLabel,{htmlFor:\"content\",children:\"Your Answer\"}),_jsx(FieldTextArea,_objectSpread(_objectSpread({},register('content')),{},{id:\"content\"}))]}),_jsx(FormButtonContainer,{children:_jsx(PrimaryButton,{type:\"submit\",children:\"Submit your answer\"})})]})})]})]})});};","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/QuestionPage.tsx"],"names":["css","gray3","gray6","FieldSet","FieldContainer","FieldLabel","FieldTextArea","FormButtonContainer","PrimaryButton","Page","useParams","getQuestion","AnswerList","React","useForm","QuestionPage","useState","question","setQuestion","questionId","register","useEffect","doGetQuestion","foundQuestion","Number","title","content","userName","created","toLocaleDateString","toLocaleTimeString","answers"],"mappings":"m5BAAA,sCACA,OAASA,GAAT,KAAoB,gBAApB,CACA,OACEC,KADF,CAEEC,KAFF,CAGEC,QAHF,CAIEC,cAJF,CAKEC,UALF,CAMEC,aANF,CAOEC,mBAPF,CAQEC,aARF,KASO,UATP,CAUA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,OAAuBC,WAAvB,KAA0C,gBAA1C,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,iBAAxB,C,0GAMA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAChC,oBAAgCF,KAAK,CAACG,QAAN,CAAoC,IAApC,CAAhC,oDAAOC,QAAP,qBAAiBC,WAAjB,qBACA,eAAuBR,SAAS,EAAhC,CAAQS,UAAR,YAAQA,UAAR,CAEA,aAAqBL,OAAO,EAA5B,CAAQM,QAAR,UAAQA,QAAR,CAEAP,KAAK,CAACQ,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,aAAa,0FAAG,iBAAOH,UAAP,0JACQR,CAAAA,WAAW,CAACQ,UAAD,CADnB,QACdI,aADc,eAEpBL,WAAW,CAACK,aAAD,CAAX,CAFoB,sDAAH,kBAAbD,CAAAA,aAAa,4CAAnB,CAIA,GAAIH,UAAJ,CAAgB,CACdG,aAAa,CAACE,MAAM,CAACL,UAAD,CAAP,CAAb,CACD,CACF,CARD,CAQG,CAACA,UAAD,CARH,EAUA,MACE,MAAC,IAAD,WACE,aACE,GAAG,CAAEnB,GAAF,iRAImBE,KAJnB,CADL,WASE,YACE,GAAG,CAAEF,GAAF,gLADL,UAOGiB,QAAQ,GAAK,IAAb,CAAoB,EAApB,CAAyBA,QAAQ,CAACQ,KAPrC,EATF,CAkBGR,QAAQ,GAAK,IAAb,EACC,MAAC,KAAD,CAAO,QAAP,YACE,UACE,GAAG,CAAEjB,GAAF,+JADL,UAMGiB,QAAQ,CAACS,OANZ,EADF,CASE,YACE,GAAG,CAAE1B,GAAF,uLAGQC,KAHR,CADL,mCAOqBgB,QAAQ,CAACU,QAP9B,mBAQRV,QAAQ,CAACW,OAAT,CAAiBC,kBAAjB,EARQ,iBASRZ,QAAQ,CAACW,OAAT,CAAiBE,kBAAjB,EATQ,GATF,CAoBE,KAAC,UAAD,EAAY,IAAI,CAAEb,QAAQ,CAACc,OAA3B,EApBF,CAqBE,aACE,GAAG,CAAE/B,GAAF,sHADL,UAKE,MAAC,QAAD,YACE,MAAC,cAAD,YACE,KAAC,UAAD,EAAY,OAAO,CAAC,SAApB,yBADF,CAEE,KAAC,aAAD,gCACMoB,QAAQ,CAAC,SAAD,CADd,MAEE,EAAE,CAAC,SAFL,GAFF,GADF,CAQE,KAAC,mBAAD,WACE,KAAC,aAAD,EAAe,IAAI,CAAC,QAApB,gCADF,EARF,GALF,EArBF,GAnBJ,GADF,EADF,CAmED,CAnFM","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  gray3,\n  gray6,\n  FieldSet,\n  FieldContainer,\n  FieldLabel,\n  FieldTextArea,\n  FormButtonContainer,\n  PrimaryButton,\n} from './Styles';\nimport { Page } from './Page';\nimport { useParams } from 'react-router';\nimport { QuestionData, getQuestion } from './QuestionData';\nimport { AnswerList } from './AnswerList';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\ntype FormData = {\n  content: string;\n};\n\nexport const QuestionPage = () => {\n  const [question, setQuestion] = React.useState<QuestionData | null>(null);\n  const { questionId } = useParams();\n\n  const { register } = useForm<FormData>();\n\n  React.useEffect(() => {\n    const doGetQuestion = async (questionId: number) => {\n      const foundQuestion = await getQuestion(questionId);\n      setQuestion(foundQuestion);\n    };\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n  }, [questionId]);\n\n  return (\n    <Page>\n      <div\n        css={css`\n          background-color: white;\n          padding: 15px 20px 20px 20px;\n          border-radius: 4px;\n          border: 1px solid ${gray6};\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n        `}\n      >\n        <div\n          css={css`\n            font-size: 19px;\n            font-weight: bold;\n            margin: 10px 0px 5px;\n          `}\n        >\n          {question === null ? '' : question.title}\n        </div>\n        {question !== null && (\n          <React.Fragment>\n            <p\n              css={css`\n                margin-top: 0px;\n                background-color: white;\n              `}\n            >\n              {question.content}\n            </p>\n            <div\n              css={css`\n                font-size: 12px;\n                font-style: italic;\n                color: ${gray3};\n              `}\n            >\n              {`Asked by Lerox ${question.userName} on\n  ${question.created.toLocaleDateString()} \n  ${question.created.toLocaleTimeString()}`}\n            </div>\n            <AnswerList data={question.answers} />\n            <form\n              css={css`\n                margin-top: 20px;\n              `}\n            >\n              <FieldSet>\n                <FieldContainer>\n                  <FieldLabel htmlFor=\"content\">Your Answer</FieldLabel>\n                  <FieldTextArea\n                    {...register('content')}\n                    id=\"content\"\n                  ></FieldTextArea>\n                </FieldContainer>\n                <FormButtonContainer>\n                  <PrimaryButton type=\"submit\">\n                    Submit your answer\n                  </PrimaryButton>\n                </FormButtonContainer>\n              </FieldSet>\n            </form>\n          </React.Fragment>\n        )}\n      </div>\n    </Page>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}