{"ast":null,"code":"var _jsxFileName = \"/Users/migueljimenez/Projects/QandA/frontend/src/HomePage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { getUnansweredQuestions } from './QuestionData';\nimport { QuestionList } from './QuestionList';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from './Styles';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n  React.useEffect(() => {\n    const doGetUnansweredeQuestions = async () => {\n      const unansweredQuestions = await getUnansweredQuestions();\n      setQuestions(unansweredQuestions);\n      setQuestionsLoading(false);\n    };\n\n    doGetUnansweredeQuestions();\n  }, []);\n  console.log('rendered');\n  const navigate = useNavigate();\n\n  const handleAskQuestionClick = () => {\n    //console.log('TODO - move to the AskPage');\n    navigate('ask');\n  };\n\n  return _jsxDEV(Page, {\n    children: [_jsxDEV(\"div\", {\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `,\n      children: [_jsxDEV(PageTitle, {\n        children: \"Unanswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), _jsxDEV(PrimaryButton, {\n        onClick: handleAskQuestionClick,\n        children: \"Ask a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), questionsLoading ? _jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : _jsxDEV(QuestionList, {\n      data: questions || [] //renderItem={(question) => <div>{question.title}</div>}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"FOba8qekGaS9gnkOL9JIgzizARY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/HomePage.tsx"],"names":["css","React","getUnansweredQuestions","QuestionList","Page","PageTitle","PrimaryButton","useNavigate","HomePage","questions","setQuestions","useState","questionsLoading","setQuestionsLoading","useEffect","doGetUnansweredeQuestions","unansweredQuestions","console","log","navigate","handleAskQuestionClick"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAqD,gBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAA+B,EAA/B,CAAlC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,KAAK,CAACU,QAAN,CAAe,IAAf,CAAhD;AAEAV,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,UAAMC,yBAAyB,GAAG,YAAY;AAC5C,YAAMC,mBAAmB,GAAG,MAAMd,sBAAsB,EAAxD;AACAQ,MAAAA,YAAY,CAACM,mBAAD,CAAZ;AACAH,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAJD;;AAKAE,IAAAA,yBAAyB;AAC1B,GAPD,EAOG,EAPH;AASAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,sBAAsB,GAAG,MAAM;AACnC;AACAD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAKA,SACE,QAAC,IAAD;AAAA,eACE;AACE,MAAA,GAAG,EAAEnB,GAAI;AACjB;AACA;AACA;AACA,SALM;AAAA,iBAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEoB,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGR,gBAAgB,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,GAGf,QAAC,YAAD;AACE,MAAA,IAAI,EAAEH,SAAS,IAAI,EADrB,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA9CM;;GAAMD,Q;UAeMD,W;;;KAfNC,Q","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { getUnansweredQuestions, QuestionData } from './QuestionData';\nimport { QuestionList } from './QuestionList';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from './Styles';\nimport { useNavigate } from 'react-router-dom';\n\nexport const HomePage = () => {\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const doGetUnansweredeQuestions = async () => {\n      const unansweredQuestions = await getUnansweredQuestions();\n      setQuestions(unansweredQuestions);\n      setQuestionsLoading(false);\n    };\n    doGetUnansweredeQuestions();\n  }, []);\n\n  console.log('rendered');\n\n  const navigate = useNavigate();\n\n  const handleAskQuestionClick = () => {\n    //console.log('TODO - move to the AskPage');\n    navigate('ask');\n  };\n\n  return (\n    <Page>\n      <div\n        css={css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `}\n      >\n        <PageTitle>Unanswered Questions</PageTitle>\n        <PrimaryButton onClick={handleAskQuestionClick}>\n          Ask a question\n        </PrimaryButton>\n      </div>\n      {questionsLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <QuestionList\n          data={questions || []}\n          //renderItem={(question) => <div>{question.title}</div>}\n        />\n      )}\n    </Page>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}