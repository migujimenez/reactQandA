{"ast":null,"code":"var _jsxFileName = \"/Users/migueljimenez/Projects/QandA/frontend/src/Question.tsx\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { gray2, gray3 } from './Styles';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const Question = ({\n  data,\n  showContent = true\n}) => _jsxDEV(\"div\", {\n  css: css`\n      padding: 10px 0px;\n      font-size: 19px;\n    `,\n  children: [_jsxDEV(Link, {\n    css: css`\n        text-decoration: none;\n        color: ${gray2};\n      `,\n    to: `/questions/${data.questionId}`,\n    children: data.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), showContent && _jsxDEV(\"div\", {\n    css: css`\n          padding-bottom: 10px;\n          font-size: 15px;\n          color: ${gray2};\n        `,\n    children: data.content.length > 50 ? `${data.content.substring(0, 50)}...` : data.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this), _jsxDEV(\"div\", {\n    css: css`\n        font-size: 12px;\n        font-style: italic;\n        color: ${gray3};\n      `,\n    children: `Asked by ${data.userName} on\n            ${data.created.toLocaleDateString()} ${data.created.toLocaleTimeString()}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n/* Question.defaultProps = {\n  showContent: true,\n}; */\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/Question.tsx"],"names":["css","gray2","gray3","Link","Question","data","showContent","questionId","title","content","length","substring","userName","created","toLocaleDateString","toLocaleTimeString"],"mappings":";;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,UAA7B;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAOA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAW,GAAG;AAAtB,CAAD,KACtB;AACE,EAAA,GAAG,EAAEN,GAAI;AACb;AACA;AACA,KAJE;AAAA,aAME,QAAC,IAAD;AACE,IAAA,GAAG,EAAEA,GAAI;AACf;AACA,iBAAiBC,KAAM;AACvB,OAJI;AAKE,IAAA,EAAE,EAAG,cAAaI,IAAI,CAACE,UAAW,EALpC;AAAA,cAOGF,IAAI,CAACG;AAPR;AAAA;AAAA;AAAA;AAAA,UANF,EAgBGF,WAAW,IACV;AACE,IAAA,GAAG,EAAEN,GAAI;AACjB;AACA;AACA,mBAAmBC,KAAM;AACzB,SALM;AAAA,cAOGI,IAAI,CAACI,OAAL,CAAaC,MAAb,GAAsB,EAAtB,GACI,GAAEL,IAAI,CAACI,OAAL,CAAaE,SAAb,CAAuB,CAAvB,EAA0B,EAA1B,CAA8B,KADpC,GAEGN,IAAI,CAACI;AATX;AAAA;AAAA;AAAA;AAAA,UAjBJ,EA6BE;AACE,IAAA,GAAG,EAAET,GAAI;AACf;AACA;AACA,iBAAiBE,KAAM;AACvB,OALI;AAAA,cAOI,YAAWG,IAAI,CAACO,QAAS;AACjC,cAAcP,IAAI,CAACQ,OAAL,CAAaC,kBAAb,EAAkC,IAAGT,IAAI,CAACQ,OAAL,CAAaE,kBAAb,EAAkC;AARjF;AAAA;AAAA;AAAA;AAAA,UA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,QADK;AA2CP;AACA;AACA;;KA7CaX,Q","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { gray2, gray3 } from './Styles';\nimport { QuestionData } from './QuestionData';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  data: QuestionData;\n  showContent?: boolean;\n}\n\nexport const Question = ({ data, showContent = true }: Props) => (\n  <div\n    css={css`\n      padding: 10px 0px;\n      font-size: 19px;\n    `}\n  >\n    <Link\n      css={css`\n        text-decoration: none;\n        color: ${gray2};\n      `}\n      to={`/questions/${data.questionId}`}\n    >\n      {data.title}\n    </Link>\n\n    {showContent && (\n      <div\n        css={css`\n          padding-bottom: 10px;\n          font-size: 15px;\n          color: ${gray2};\n        `}\n      >\n        {data.content.length > 50\n          ? `${data.content.substring(0, 50)}...`\n          : data.content}\n      </div>\n    )}\n    <div\n      css={css`\n        font-size: 12px;\n        font-style: italic;\n        color: ${gray3};\n      `}\n    >\n      {`Asked by ${data.userName} on\n            ${data.created.toLocaleDateString()} ${data.created.toLocaleTimeString()}`}\n    </div>\n  </div>\n);\n\n/* Question.defaultProps = {\n  showContent: true,\n}; */\n"]},"metadata":{},"sourceType":"module"}