{"ast":null,"code":"var _jsxFileName = \"/Users/migueljimenez/Projects/QandA/frontend/src/AskPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Page } from './Page';\nimport { FieldSet, FieldContainer, FieldLabel, FieldInput, FieldTextArea, FormButtonContainer, PrimaryButton, FieldError } from './Styles';\nimport { useForm } from 'react-hook-form';\nimport { postQuestion } from './QuestionData';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AskPage = () => {\n  _s();\n\n  const [successfullySubmited, setSucessfullySubmited] = useState(false);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm({\n    mode: 'onBlur'\n  });\n\n  const submitForm = async data => {\n    const result = await postQuestion({\n      title: data.title,\n      content: data.content,\n      userName: 'Miguexxx',\n      created: new Date()\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Ask a question\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitForm),\n      children: /*#__PURE__*/_jsxDEV(FieldSet, {\n        children: [/*#__PURE__*/_jsxDEV(FieldContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FieldLabel, {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldInput, { ...register('title', {\n              required: true,\n              minLength: 10\n            }),\n            id: \"title\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), errors.title && errors.title.type === 'required' && /*#__PURE__*/_jsxDEV(FieldError, {\n            children: \"You must enter the question title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), errors.title && errors.title.type === 'minLength' && /*#__PURE__*/_jsxDEV(FieldError, {\n            children: \"The title must be at last 10 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FieldContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FieldLabel, {\n            htmlFor: \"content\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldTextArea, { ...register('content', {\n              required: true,\n              minLength: 50\n            }),\n            id: \"content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), errors.content && errors.content.type === 'required' && /*#__PURE__*/_jsxDEV(FieldError, {\n            children: \"You must enter the question title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), errors.content && errors.content.type === 'minLength' && /*#__PURE__*/_jsxDEV(FieldError, {\n            children: \"The title must be at last 50 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n            type: \"submit\",\n            children: \"Submit your question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AskPage, \"3v51BhM1qzM8YP28qpu+SJagTnI=\", false, function () {\n  return [useForm];\n});\n\n_c = AskPage;\nexport default AskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AskPage\");","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/AskPage.tsx"],"names":["Page","FieldSet","FieldContainer","FieldLabel","FieldInput","FieldTextArea","FormButtonContainer","PrimaryButton","FieldError","useForm","postQuestion","useState","AskPage","successfullySubmited","setSucessfullySubmited","register","formState","errors","handleSubmit","mode","submitForm","data","result","title","content","userName","created","Date","required","minLength","type"],"mappings":"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","sourcesContent":["import { Page } from './Page';\nimport {\n  FieldSet,\n  FieldContainer,\n  FieldLabel,\n  FieldInput,\n  FieldTextArea,\n  FormButtonContainer,\n  PrimaryButton,\n  FieldError,\n  SubmissionSuccess,\n} from './Styles';\nimport { useForm } from 'react-hook-form';\nimport { postQuestion } from './QuestionData';\nimport { useState } from 'react';\n\ntype FormData = {\n  title: string;\n  content: string;\n};\n\nexport const AskPage = () => {\n  const [successfullySubmited, setSucessfullySubmited] = useState(false);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<FormData>({ mode: 'onBlur' });\n\nconst submitForm = async (data: FormData) => {\n  const result = await postQuestion({title: data.title, content: data.content, userName: 'Miguexxx', created: new Date()});\n}\n\n  return (\n    <Page title=\"Ask a question\">\n      <form onSubmit={handleSubmit(submitForm)}>\n        <FieldSet>\n          <FieldContainer>\n            <FieldLabel htmlFor=\"title\">Title</FieldLabel>\n            <FieldInput\n              {...register('title', { required: true, minLength: 10 })}\n              id=\"title\"\n              type=\"text\"\n            />\n            {errors.title && errors.title.type === 'required' && (\n              <FieldError>You must enter the question title</FieldError>\n            )}\n            {errors.title && errors.title.type === 'minLength' && (\n              <FieldError>The title must be at last 10 characters</FieldError>\n            )}\n          </FieldContainer>\n          <FieldContainer>\n            <FieldLabel htmlFor=\"content\">Content</FieldLabel>\n            <FieldTextArea\n              {...register('content', { required: true, minLength: 50 })}\n              id=\"content\"\n            ></FieldTextArea>\n            {errors.content && errors.content.type === 'required' && (\n              <FieldError>You must enter the question title</FieldError>\n            )}\n            {errors.content && errors.content.type === 'minLength' && (\n              <FieldError>The title must be at last 50 characters</FieldError>\n            )}\n          </FieldContainer>\n          <FormButtonContainer>\n            <PrimaryButton type=\"submit\">Submit your question</PrimaryButton>\n          </FormButtonContainer>\n        </FieldSet>\n      </form>\n    </Page>\n  );\n};\n\nexport default AskPage;\n"]},"metadata":{},"sourceType":"module"}