{"ast":null,"code":"var _jsxFileName = \"/Users/migueljimenez/Projects/QandA/frontend/src/Header.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { fontfamily, fontSize, gray1, gray2, gray5 } from './Styles';\nimport { UserIcon } from './Icons';\nimport { Link, useSearchParams, useNavigate } from 'react-router-dom';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    register\n  } = useForm();\n  const [searchParams] = useSearchParams();\n  const criteria = searchParams.get('criteria') || ''; //const [search, setSearch] = React.useState(criteria);\n\n  /*   const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    //console.log(e.currentTarget.value);\n    setSearch(e.currentTarget.value);\n  }; */\n\n  const handleSubmit = e => {\n    e.preventDefault(); //console.log(search);\n  };\n\n  return _jsxDEV(\"div\", {\n    css: css`\n        position: fixed;\n        box-sizing: border-box;\n        top: 0;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px 20px;\n        background-color: #fff;\n        border-bottom: 1px solid ${gray5};\n        box-shadow: 0 3px 7px 0 rgba(110, 112, 114, 0.21);\n      `,\n    children: [_jsxDEV(Link, {\n      to: \"/\",\n      css: css`\n          font-size: 24px;\n          font-weight: bold;\n          color: ${gray1};\n          text-decoration: none;\n        `,\n      children: \"Q & A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: _jsxDEV(\"input\", { ...register('search'),\n        defaultValue: criteria,\n        type: \"text\",\n        placeholder: \"Search...\" //onChange={handleSearchInputChange}\n        ,\n        css: css`\n            box-sizing: border-box;\n            font-family: ${fontfamily};\n            font-size: ${fontSize};\n            padding: 8px 10px;\n            border: 1px solid ${gray5};\n            border-radius: 3px;\n            color: ${gray2};\n            background-color: white;\n            width: 200px;\n            height: 30px;\n            :focus {\n              outline-color: ${gray5};\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), _jsxDEV(Link, {\n      to: \"./signin\",\n      css: css`\n          font-family: ${fontfamily};\n          font-size: ${fontSize};\n          padding: 5px 10px;\n          background-color: transparent;\n          color: ${gray2};\n          text-decoration: none;\n          cursor: pointer;\n          :focus {\n            outline-color: ${gray5};\n          }\n        `,\n      children: [_jsxDEV(UserIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), _jsxDEV(\"span\", {\n        css: css`\n            margin-left: 7px;\n          `,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"zOMVdysEwgbJ4PBJnzm8EYmZbVQ=\", false, function () {\n  return [useNavigate, useForm, useSearchParams];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/Header.tsx"],"names":["css","fontfamily","fontSize","gray1","gray2","gray5","UserIcon","Link","useSearchParams","useNavigate","React","useForm","Header","navigate","register","searchParams","criteria","get","handleSubmit","e","preventDefault"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,KAA7C,QAA0D,UAA1D;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,IAAT,EAAeC,eAAf,EAAgCC,WAAhC,QAAmD,kBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAIA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAeH,OAAO,EAA5B;AACA,QAAM,CAACI,YAAD,IAAiBP,eAAe,EAAtC;AACA,QAAMQ,QAAQ,GAAGD,YAAY,CAACE,GAAb,CAAiB,UAAjB,KAAgC,EAAjD,CAJ0B,CAM1B;;AAEA;AACF;AACA;AACA;;AAEE,QAAMC,YAAY,GAAIC,CAAD,IAAwB;AAC3CA,IAAAA,CAAC,CAACC,cAAF,GAD2C,CAE3C;AACD,GAHD;;AAKA,SACE;AACE,IAAA,GAAG,EAAEpB,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmCK,KAAM;AACzC;AACA,OAbI;AAAA,eAeE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,GADL;AAEE,MAAA,GAAG,EAAEL,GAAI;AACjB;AACA;AACA,mBAAmBG,KAAM;AACzB;AACA,SAPM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EA2BE;AAAM,MAAA,QAAQ,EAAEe,YAAhB;AAAA,gBACE,sBACMJ,QAAQ,CAAC,QAAD,CADd;AAEE,QAAA,YAAY,EAAEE,QAFhB;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,WAJd,CAKE;AALF;AAME,QAAA,GAAG,EAAEhB,GAAI;AACnB;AACA,2BAA2BC,UAAW;AACtC,yBAAyBC,QAAS;AAClC;AACA,gCAAgCG,KAAM;AACtC;AACA,qBAAqBD,KAAM;AAC3B;AACA;AACA;AACA;AACA,+BAA+BC,KAAM;AACrC;AACA;AApBQ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3BF,EAmDE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,GAAG,EAAEL,GAAI;AACjB,yBAAyBC,UAAW;AACpC,uBAAuBC,QAAS;AAChC;AACA;AACA,mBAAmBE,KAAM;AACzB;AACA;AACA;AACA,6BAA6BC,KAAM;AACnC;AACA,SAbM;AAAA,iBAeE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAfF,EAgBE;AACE,QAAA,GAAG,EAAEL,GAAI;AACnB;AACA,WAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8ED,CAhGM;;GAAMY,M;UACMH,W,EACIE,O,EACEH,e;;;KAHZI,M","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { fontfamily, fontSize, gray1, gray2, gray5 } from './Styles';\nimport { UserIcon } from './Icons';\nimport { Link, useSearchParams, useNavigate } from 'react-router-dom';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\ntype FormData = { search: string };\n\nexport const Header = () => {\n  const navigate = useNavigate()\n  const { register } = useForm<FormData>();\n  const [searchParams] = useSearchParams();\n  const criteria = searchParams.get('criteria') || '';\n\n  //const [search, setSearch] = React.useState(criteria);\n\n  /*   const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    //console.log(e.currentTarget.value);\n    setSearch(e.currentTarget.value);\n  }; */\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    //console.log(search);\n  };\n\n  return (\n    <div\n      css={css`\n        position: fixed;\n        box-sizing: border-box;\n        top: 0;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px 20px;\n        background-color: #fff;\n        border-bottom: 1px solid ${gray5};\n        box-shadow: 0 3px 7px 0 rgba(110, 112, 114, 0.21);\n      `}\n    >\n      <Link\n        to=\"/\"\n        css={css`\n          font-size: 24px;\n          font-weight: bold;\n          color: ${gray1};\n          text-decoration: none;\n        `}\n      >\n        Q & A\n      </Link>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          {...register('search')}\n          defaultValue={criteria}\n          type=\"text\"\n          placeholder=\"Search...\"\n          //onChange={handleSearchInputChange}\n          css={css`\n            box-sizing: border-box;\n            font-family: ${fontfamily};\n            font-size: ${fontSize};\n            padding: 8px 10px;\n            border: 1px solid ${gray5};\n            border-radius: 3px;\n            color: ${gray2};\n            background-color: white;\n            width: 200px;\n            height: 30px;\n            :focus {\n              outline-color: ${gray5};\n            }\n          `}\n        />\n      </form>\n      <Link\n        to=\"./signin\"\n        css={css`\n          font-family: ${fontfamily};\n          font-size: ${fontSize};\n          padding: 5px 10px;\n          background-color: transparent;\n          color: ${gray2};\n          text-decoration: none;\n          cursor: pointer;\n          :focus {\n            outline-color: ${gray5};\n          }\n        `}\n      >\n        <UserIcon />\n        <span\n          css={css`\n            margin-left: 7px;\n          `}\n        >\n          Sign In\n        </span>\n      </Link>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}