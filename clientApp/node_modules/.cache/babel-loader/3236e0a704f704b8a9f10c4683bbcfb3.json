{"ast":null,"code":"var _jsxFileName = \"/Users/migueljimenez/Projects/QandA/frontend/src/QuestionPage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { gray3, gray6 } from './Styles';\nimport { Page } from './Page';\nimport { useParams } from 'react-router';\nimport { getQuestion } from './QuestionData';\nimport { AnswerList } from './AnswerList';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n\n  const [question, setQuestion] = React.useState(null);\n  const {\n    questionId\n  } = useParams();\n  React.useEffect(() => {\n    const doGetQuestion = async questionId => {\n      const foundQuestion = await getQuestion(questionId);\n      setQuestion(foundQuestion);\n    };\n\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n  }, [questionId]);\n  return _jsxDEV(Page, {\n    children: _jsxDEV(\"div\", {\n      css: css`\n          background-color: white;\n          padding: 15px 20px 20px 20px;\n          border-radius: 4px;\n          border: 1px solid ${gray6};\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n        `,\n      children: [_jsxDEV(\"div\", {\n        css: css`\n            font-size: 19px;\n            font-weight: bold;\n            margin: 10px 0px 5px;\n          `,\n        children: question === null ? '' : question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), question !== null && _jsxDEV(React.Fragment, {\n        children: [_jsxDEV(\"p\", {\n          css: css`\n                margin-top: 0px;\n                background-color: white;\n              `,\n          children: question.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), _jsxDEV(\"div\", {\n          css: css`\n                font-size: 12px;\n                font-style: italic;\n                color: ${gray3};\n              `,\n          children: `Asked by ${question.userName} on\n  ${question.created.toLocaleDateString()} \n  ${question.created.toLocaleTimeString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), _jsxDEV(AnswerList, {\n          data: question.answers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionPage, \"E2RtnRGDkgwA3yFmVis5dwE2hPg=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"sources":["/Users/migueljimenez/Projects/QandA/frontend/src/QuestionPage.tsx"],"names":["css","gray3","gray6","Page","useParams","getQuestion","AnswerList","React","QuestionPage","question","setQuestion","useState","questionId","useEffect","doGetQuestion","foundQuestion","Number","title","content","userName","created","toLocaleDateString","toLocaleTimeString","answers"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,UAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAAuBC,WAAvB,QAA0C,gBAA1C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,KAAK,CAACI,QAAN,CAAoC,IAApC,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBR,SAAS,EAAhC;AAEAG,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAMC,aAAa,GAAG,MAAOF,UAAP,IAA8B;AAClD,YAAMG,aAAa,GAAG,MAAMV,WAAW,CAACO,UAAD,CAAvC;AACAF,MAAAA,WAAW,CAACK,aAAD,CAAX;AACD,KAHD;;AAIA,QAAIH,UAAJ,EAAgB;AACdE,MAAAA,aAAa,CAACE,MAAM,CAACJ,UAAD,CAAP,CAAb;AACD;AACF,GARD,EAQG,CAACA,UAAD,CARH;AAUA,SACE,QAAC,IAAD;AAAA,cACE;AACE,MAAA,GAAG,EAAEZ,GAAI;AACjB;AACA;AACA;AACA,8BAA8BE,KAAM;AACpC;AACA,SAPM;AAAA,iBASE;AACE,QAAA,GAAG,EAAEF,GAAI;AACnB;AACA;AACA;AACA,WALQ;AAAA,kBAOGS,QAAQ,KAAK,IAAb,GAAoB,EAApB,GAAyBA,QAAQ,CAACQ;AAPrC;AAAA;AAAA;AAAA;AAAA,cATF,EAkBGR,QAAQ,KAAK,IAAb,IACC,QAAC,KAAD,CAAO,QAAP;AAAA,mBACE;AACE,UAAA,GAAG,EAAET,GAAI;AACvB;AACA;AACA,eAJY;AAAA,oBAMGS,QAAQ,CAACS;AANZ;AAAA;AAAA;AAAA;AAAA,gBADF,EASE;AACE,UAAA,GAAG,EAAElB,GAAI;AACvB;AACA;AACA,yBAAyBC,KAAM;AAC/B,eALY;AAAA,oBAOI,YAAWQ,QAAQ,CAACU,QAAS;AAC7C,IAAIV,QAAQ,CAACW,OAAT,CAAiBC,kBAAjB,EAAsC;AAC1C,IAAIZ,QAAQ,CAACW,OAAT,CAAiBE,kBAAjB,EAAsC;AAT9B;AAAA;AAAA;AAAA;AAAA,gBATF,EAoBE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEb,QAAQ,CAACc;AAA3B;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CA7DM;;GAAMf,Y;UAEYJ,S;;;KAFZI,Y","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { gray3, gray6 } from './Styles';\nimport { Page } from './Page';\nimport { useParams } from 'react-router';\nimport { QuestionData, getQuestion } from './QuestionData';\nimport { AnswerList } from './AnswerList';\nimport React from 'react';\n\nexport const QuestionPage = () => {\n  const [question, setQuestion] = React.useState<QuestionData | null>(null);\n  const { questionId } = useParams();\n\n  React.useEffect(() => {\n    const doGetQuestion = async (questionId: number) => {\n      const foundQuestion = await getQuestion(questionId);\n      setQuestion(foundQuestion);\n    };\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n  }, [questionId]);\n\n  return (\n    <Page>\n      <div\n        css={css`\n          background-color: white;\n          padding: 15px 20px 20px 20px;\n          border-radius: 4px;\n          border: 1px solid ${gray6};\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n        `}\n      >\n        <div\n          css={css`\n            font-size: 19px;\n            font-weight: bold;\n            margin: 10px 0px 5px;\n          `}\n        >\n          {question === null ? '' : question.title}\n        </div>\n        {question !== null && (\n          <React.Fragment>\n            <p\n              css={css`\n                margin-top: 0px;\n                background-color: white;\n              `}\n            >\n              {question.content}\n            </p>\n            <div\n              css={css`\n                font-size: 12px;\n                font-style: italic;\n                color: ${gray3};\n              `}\n            >\n              {`Asked by ${question.userName} on\n  ${question.created.toLocaleDateString()} \n  ${question.created.toLocaleTimeString()}`}\n            </div>\n            <AnswerList data={question.answers} />\n          </React.Fragment>\n        )}\n      </div>\n    </Page>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}