{"version":3,"sources":["AskPage.tsx"],"names":["AskPage","React","useState","successfullySubmited","setSucessfullySubmited","useForm","mode","register","handleSubmit","formState","errors","isSubmitting","submitForm","data","a","postQuestion","title","content","userName","created","Date","result","onSubmit","disabled","htmlFor","required","minLength","id","type"],"mappings":"oPAqBaA,EAAU,WACrB,MAAuDC,IAAMC,UAAS,GAAtE,mBAAOC,EAAP,KAA6BC,EAA7B,KAEA,EAIIC,YAAkB,CACpBC,KAAM,WAJNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,aAKjBC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,YAAa,CAChCC,MAAOH,EAAKG,MACZC,QAASJ,EAAKI,QACdC,SAAU,UACVC,QAAS,IAAIC,OALE,OACXC,EADW,OAOjBjB,IAAuBiB,GAPN,2CAAH,sDAUhB,OACE,cAAC,IAAD,CAAML,MAAM,iBAAZ,SACE,sBAAMM,SAAUd,EAAaI,GAA7B,SACE,eAAC,IAAD,CAAUW,SAAUZ,GAAgBR,EAApC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYqB,QAAQ,QAApB,mBACA,cAAC,IAAD,2BACMjB,EAAS,QAAS,CAAEkB,UAAU,EAAMC,UAAW,MADrD,IAEEC,GAAG,QACHC,KAAK,UAENlB,EAAOM,OAA+B,aAAtBN,EAAOM,MAAMY,MAC5B,cAAC,IAAD,gDAEDlB,EAAOM,OAA+B,cAAtBN,EAAOM,MAAMY,MAC5B,cAAC,IAAD,yDAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAYJ,QAAQ,UAApB,qBACA,cAAC,IAAD,2BACMjB,EAAS,UAAW,CAAEkB,UAAU,EAAMC,UAAW,MADvD,IAEEC,GAAG,aAEJjB,EAAOO,SAAmC,aAAxBP,EAAOO,QAAQW,MAChC,cAAC,IAAD,gDAEDlB,EAAOO,SAAmC,cAAxBP,EAAOO,QAAQW,MAChC,cAAC,IAAD,yDAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAeA,KAAK,SAApB,oCAEDzB,GACC,cAAC,IAAD,+DAUGH","file":"static/js/3.0ff1edb2.chunk.js","sourcesContent":["import { Page } from './Page';\r\nimport {\r\n  FieldSet,\r\n  FieldContainer,\r\n  FieldLabel,\r\n  FieldInput,\r\n  FieldTextArea,\r\n  FormButtonContainer,\r\n  PrimaryButton,\r\n  FieldError,\r\n  SubmissionSuccess,\r\n} from './Styles';\r\nimport { useForm } from 'react-hook-form';\r\nimport { postQuestion } from './QuestionData';\r\nimport React from 'react';\r\n\r\ntype FormData = {\r\n  title: string;\r\n  content: string;\r\n};\r\n\r\nexport const AskPage = () => {\r\n  const [successfullySubmited, setSucessfullySubmited] = React.useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormData>({\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const submitForm = async (data: FormData) => {\r\n    const result = await postQuestion({\r\n      title: data.title,\r\n      content: data.content,\r\n      userName: 'Miguexx',\r\n      created: new Date(),\r\n    });\r\n    setSucessfullySubmited(result ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Ask a question\">\r\n      <form onSubmit={handleSubmit(submitForm)}>\r\n        <FieldSet disabled={isSubmitting || successfullySubmited}>\r\n          <FieldContainer>\r\n            <FieldLabel htmlFor=\"title\">Title</FieldLabel>\r\n            <FieldInput\r\n              {...register('title', { required: true, minLength: 10 })}\r\n              id=\"title\"\r\n              type=\"text\"\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <FieldError>You must enter the question title</FieldError>\r\n            )}\r\n            {errors.title && errors.title.type === 'minLength' && (\r\n              <FieldError>The title must be at last 10 characters</FieldError>\r\n            )}\r\n          </FieldContainer>\r\n          <FieldContainer>\r\n            <FieldLabel htmlFor=\"content\">Content</FieldLabel>\r\n            <FieldTextArea\r\n              {...register('content', { required: true, minLength: 50 })}\r\n              id=\"content\"\r\n            ></FieldTextArea>\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <FieldError>You must enter the question title</FieldError>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <FieldError>The title must be at last 50 characters</FieldError>\r\n            )}\r\n          </FieldContainer>\r\n          <FormButtonContainer>\r\n            <PrimaryButton type=\"submit\">Submit your question</PrimaryButton>\r\n          </FormButtonContainer>\r\n          {successfullySubmited && (\r\n            <SubmissionSuccess>\r\n              Your question was successfully submitted\r\n            </SubmissionSuccess>\r\n          )}\r\n        </FieldSet>\r\n      </form>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default AskPage;\r\n"],"sourceRoot":""}