{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import{Page}from'./Page';import{useSearchParams}from'react-router-dom';import{QuestionList}from'./QuestionList';import{searchQuestions}from'./QuestionData';import React from'react';import{jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";export var SearchPage=function SearchPage(){var _useSearchParams=useSearchParams(),_useSearchParams2=_slicedToArray(_useSearchParams,1),searchParams=_useSearchParams2[0];var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),questions=_React$useState2[0],setQuestions=_React$useState2[1];var search=searchParams.get('criteria')||'';React.useEffect(function(){var cancelled=false;var doSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(criteria){var foundResults;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return searchQuestions(criteria);case 2:foundResults=_context.sent;if(!cancelled){setQuestions(foundResults);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function doSearch(_x){return _ref.apply(this,arguments);};}();doSearch(search);return function(){cancelled=true;};//eslint-disable-next-line react-hooks/exhaustive-deps\n},[search]);return _jsxs(Page,{title:\"Search results\",children:[search&&_jsxs(\"p\",{css:css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n            font-size: 16px;\\n            font-style: italic;\\n            margin-top: 0px;\\n          \"]))),children:[' ',\"for \\\"\",search,\"\\\"\"]}),_jsx(QuestionList,{data:questions})]});};","map":{"version":3,"sources":["C:/MyApps/reactQandA/clientApp/src/SearchPage.tsx"],"names":["css","Page","useSearchParams","QuestionList","searchQuestions","React","SearchPage","searchParams","useState","questions","setQuestions","search","get","useEffect","cancelled","doSearch","criteria","foundResults"],"mappings":"qnBAAA,sCACA,OAASA,GAAT,KAAoB,gBAApB,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,eAAT,KAAgC,kBAAhC,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAAuBC,eAAvB,KAA8C,gBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,0GAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,qBAAuBJ,eAAe,EAAtC,sDAAOK,YAAP,sBACA,oBAAkCF,KAAK,CAACG,QAAN,CAA+B,EAA/B,CAAlC,oDAAOC,SAAP,qBAAkBC,YAAlB,qBACA,GAAMC,CAAAA,MAAM,CAAGJ,YAAY,CAACK,GAAb,CAAiB,UAAjB,GAAgC,EAA/C,CAEAP,KAAK,CAACQ,SAAN,CAAgB,UAAM,CACpB,GAAIC,CAAAA,SAAS,CAAG,KAAhB,CACA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,QAAP,yJACYZ,CAAAA,eAAe,CAACY,QAAD,CAD3B,QACTC,YADS,eAEf,GAAI,CAACH,SAAL,CAAgB,CACdJ,YAAY,CAACO,YAAD,CAAZ,CACD,CAJc,sDAAH,kBAARF,CAAAA,QAAQ,4CAAd,CAMAA,QAAQ,CAACJ,MAAD,CAAR,CACA,MAAO,WAAM,CACXG,SAAS,CAAG,IAAZ,CACD,CAFD,CAGA;AACD,CAbD,CAaG,CAACH,MAAD,CAbH,EAeA,MACE,OAAC,IAAD,EAAM,KAAK,CAAC,gBAAZ,WACGA,MAAM,EACL,WACE,GAAG,CAAEX,GAAF,0KADL,WAOG,GAPH,UAQQW,MARR,QAFJ,CAaE,KAAC,YAAD,EAAc,IAAI,CAAEF,SAApB,EAbF,GADF,CAiBD,CArCM","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { Page } from './Page';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { QuestionList } from './QuestionList';\r\nimport { QuestionData, searchQuestions } from './QuestionData';\r\nimport React from 'react';\r\n\r\nexport const SearchPage = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\r\n  const search = searchParams.get('criteria') || '';\r\n\r\n  React.useEffect(() => {\r\n    let cancelled = false;\r\n    const doSearch = async (criteria: string) => {\r\n      const foundResults = await searchQuestions(criteria);\r\n      if (!cancelled) {\r\n        setQuestions(foundResults);\r\n      }\r\n    };\r\n    doSearch(search);\r\n    return () => {\r\n      cancelled = true;\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [search]);\r\n\r\n  return (\r\n    <Page title=\"Search results\">\r\n      {search && (\r\n        <p\r\n          css={css`\r\n            font-size: 16px;\r\n            font-style: italic;\r\n            margin-top: 0px;\r\n          `}\r\n        >\r\n          {' '}\r\n          for \"{search}\"\r\n        </p>\r\n      )}\r\n      <QuestionList data={questions}></QuestionList>\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}