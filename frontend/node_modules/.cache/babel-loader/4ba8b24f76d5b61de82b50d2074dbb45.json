{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyApps\\\\reactQandA\\\\clientApp\\\\src\\\\Auth.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport { authSettings } from './AppSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Auth0Context = /*#__PURE__*/React.createContext({\n  isAuthenticated: false,\n  signIn: () => {},\n  signOut: () => {},\n  loading: true\n});\nexport const useAuth = () => {\n  _s();\n\n  return React.useContext(Auth0Context);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  const [user, setUser] = React.useState(undefined);\n  const [auth0Client, setAuth0Client] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n\n  const getAuth0ClientFromState = () => {\n    if (auth0Client === undefined) {\n      throw new Error('Auth0 client not set');\n    }\n\n    return auth0Client;\n  };\n\n  React.useEffect(() => {\n    const initAuth0 = async () => {\n      setLoading(true);\n      const auth0FromHook = await createAuth0Client(authSettings);\n      setAuth0Client(auth0FromHook);\n\n      if (window.location.pathname === '/signin-callback' && window.location.search.indexOf('code=') > -1) {\n        await auth0FromHook.handleRedirectCallback();\n        window.location.replace(window.location.origin);\n      }\n\n      const isAuthenticatedFromHook = await auth0FromHook.isAuthenticated();\n\n      if (isAuthenticatedFromHook) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setIsAuthenticated(isAuthenticatedFromHook);\n      setLoading(false);\n    };\n\n    initAuth0();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Auth0Context.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      signIn: () => getAuth0ClientFromState().loginWithRedirect(),\n      signOut: () => getAuth0ClientFromState().logout({\n        client_id: authSettings.client_id,\n        returnTo: window.location.origin + '/signout-callback'\n      }),\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"YWOQTfsIVtMYNV79ee0Ed4dzLAs=\");\n\n_c = AuthProvider;\nexport const getAccessToken = async () => {\n  const auth0FromHook = await createAuth0Client(authSettings);\n  const accessToken = await auth0FromHook.getTokenSilently();\n  return accessToken;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/MyApps/reactQandA/clientApp/src/Auth.tsx"],"names":["React","createAuth0Client","authSettings","Auth0Context","createContext","isAuthenticated","signIn","signOut","loading","useAuth","useContext","AuthProvider","children","setIsAuthenticated","useState","user","setUser","undefined","auth0Client","setAuth0Client","setLoading","getAuth0ClientFromState","Error","useEffect","initAuth0","auth0FromHook","window","location","pathname","search","indexOf","handleRedirectCallback","replace","origin","isAuthenticatedFromHook","getUser","loginWithRedirect","logout","client_id","returnTo","getAccessToken","accessToken","getTokenSilently"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\r\nimport { authSettings } from './AppSettings';\r\n\r\ninterface Auth0User {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\ninterface IAuth0Context {\r\n  isAuthenticated: boolean;\r\n  user?: Auth0User;\r\n  signIn: () => void;\r\n  signOut: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nexport const Auth0Context = React.createContext<IAuth0Context>({\r\n  isAuthenticated: false,\r\n  signIn: () => {},\r\n  signOut: () => {},\r\n  loading: true,\r\n});\r\n\r\nexport const useAuth = () => React.useContext(Auth0Context);\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(false);\r\n  const [user, setUser] = React.useState<Auth0User | undefined>(undefined);\r\n  const [auth0Client, setAuth0Client] = React.useState<Auth0Client>();\r\n  const [loading, setLoading] = React.useState<boolean>(true);\r\n\r\n  const getAuth0ClientFromState = () => {\r\n    if (auth0Client === undefined) {\r\n      throw new Error('Auth0 client not set');\r\n    }\r\n    return auth0Client;\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      setLoading(true);\r\n      const auth0FromHook = await createAuth0Client(authSettings);\r\n      setAuth0Client(auth0FromHook);\r\n\r\n      if (\r\n        window.location.pathname === '/signin-callback' &&\r\n        window.location.search.indexOf('code=') > -1\r\n      ) {\r\n        await auth0FromHook.handleRedirectCallback();\r\n        window.location.replace(window.location.origin);\r\n      }\r\n\r\n      const isAuthenticatedFromHook = await auth0FromHook.isAuthenticated();\r\n      if (isAuthenticatedFromHook) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n      setIsAuthenticated(isAuthenticatedFromHook);\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n  }, []);\r\n\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        signIn: () => getAuth0ClientFromState().loginWithRedirect(),\r\n        signOut: () =>\r\n          getAuth0ClientFromState().logout({\r\n            client_id: authSettings.client_id,\r\n            returnTo: window.location.origin + '/signout-callback',\r\n          }),\r\n        loading,\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const auth0FromHook = await createAuth0Client(authSettings);\r\n  const accessToken = await auth0FromHook.getTokenSilently();\r\n  return accessToken;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}