{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyApps\\\\reactQandA\\\\clientApp\\\\src\\\\HomePage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { getUnansweredQuestions } from './QuestionData';\nimport { QuestionList } from './QuestionList';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from './Styles';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './Auth';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n  React.useEffect(() => {\n    let canceled = false;\n\n    const doGetUnansweredeQuestions = async () => {\n      const unansweredQuestions = await getUnansweredQuestions();\n\n      if (!canceled) {\n        setQuestions(unansweredQuestions);\n        setQuestionsLoading(false);\n      }\n    };\n\n    doGetUnansweredeQuestions();\n    return () => {\n      canceled = true;\n    };\n  }, []);\n  console.log('rendered');\n  const navigate = useNavigate();\n\n  const handleAskQuestionClick = () => {\n    navigate('ask');\n  };\n\n  const {\n    isAuthenticated\n  } = useAuth();\n  return _jsxDEV(Page, {\n    children: [_jsxDEV(\"div\", {\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `,\n      children: [_jsxDEV(PageTitle, {\n        children: \"Unanswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), isAuthenticated && _jsxDEV(PrimaryButton, {\n        onClick: handleAskQuestionClick,\n        children: \"Ask a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), questionsLoading ? _jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : _jsxDEV(QuestionList, {\n      data: questions || [] //renderItem={(question) => <div>{question.title}</div>}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"jqiakj5QQGooSRwYN2utI+biwJE=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/MyApps/reactQandA/clientApp/src/HomePage.tsx"],"names":["css","React","getUnansweredQuestions","QuestionList","Page","PageTitle","PrimaryButton","useNavigate","useAuth","HomePage","questions","setQuestions","useState","questionsLoading","setQuestionsLoading","useEffect","canceled","doGetUnansweredeQuestions","unansweredQuestions","console","log","navigate","handleAskQuestionClick","isAuthenticated"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAqD,gBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACW,QAAN,CAA+B,EAA/B,CAAlC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cb,KAAK,CAACW,QAAN,CAAe,IAAf,CAAhD;AAEAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,QAAIC,QAAQ,GAAG,KAAf;;AACA,UAAMC,yBAAyB,GAAG,YAAY;AAC5C,YAAMC,mBAAmB,GAAG,MAAMhB,sBAAsB,EAAxD;;AACA,UAAI,CAACc,QAAL,EAAe;AACbL,QAAAA,YAAY,CAACO,mBAAD,CAAZ;AACAJ,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AACF,KAND;;AAOAG,IAAAA,yBAAyB;AACzB,WAAO,MAAM;AACXD,MAAAA,QAAQ,GAAG,IAAX;AACD,KAFD;AAGD,GAbD,EAaG,EAbH;AAeAG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,sBAAsB,GAAG,MAAM;AACnCD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAM;AAAEE,IAAAA;AAAF,MAAsBf,OAAO,EAAnC;AAEA,SACE,QAAC,IAAD;AAAA,eACE;AACE,MAAA,GAAG,EAAER,GAAI;AACjB;AACA;AACA;AACA,SALM;AAAA,iBAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGuB,eAAe,IACd,QAAC,aAAD;AAAe,QAAA,OAAO,EAAED,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGT,gBAAgB,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,GAGf,QAAC,YAAD;AACE,MAAA,IAAI,EAAEH,SAAS,IAAI,EADrB,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvDM;;GAAMD,Q;UAqBMF,W,EAMWC,O;;;KA3BjBC,Q","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport { getUnansweredQuestions, QuestionData } from './QuestionData';\r\nimport { QuestionList } from './QuestionList';\r\nimport { Page } from './Page';\r\nimport { PageTitle } from './PageTitle';\r\nimport { PrimaryButton } from './Styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from './Auth';\r\n\r\nexport const HomePage = () => {\r\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\r\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    let canceled = false;\r\n    const doGetUnansweredeQuestions = async () => {\r\n      const unansweredQuestions = await getUnansweredQuestions();\r\n      if (!canceled) {\r\n        setQuestions(unansweredQuestions);\r\n        setQuestionsLoading(false);\r\n      }\r\n    };\r\n    doGetUnansweredeQuestions();\r\n    return () => {\r\n      canceled = true;\r\n    };\r\n  }, []);\r\n\r\n  console.log('rendered');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleAskQuestionClick = () => {\r\n    navigate('ask');\r\n  };\r\n\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n        `}\r\n      >\r\n        <PageTitle>Unanswered Questions</PageTitle>\r\n        {isAuthenticated && (\r\n          <PrimaryButton onClick={handleAskQuestionClick}>\r\n            Ask a question\r\n          </PrimaryButton>\r\n        )}\r\n      </div>\r\n      {questionsLoading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <QuestionList\r\n          data={questions || []}\r\n          //renderItem={(question) => <div>{question.title}</div>}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}