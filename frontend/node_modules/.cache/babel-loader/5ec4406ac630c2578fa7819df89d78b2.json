{"ast":null,"code":"import _objectSpread from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import{gray3,gray6,FieldSet,FieldContainer,FieldLabel,FieldTextArea,FormButtonContainer,PrimaryButton,FieldError,SubmissionSuccess}from'./Styles';import{Page}from'./Page';import{useParams}from'react-router';import{getQuestion,postAnswer}from'./QuestionData';import{AnswerList}from'./AnswerList';import React from'react';import{useForm}from'react-hook-form';import{useSelector,useDispatch}from'react-redux';import{gettingQuestionAction,gotQuestionAction}from'./Store';import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";import{jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";export var QuestionPage=function QuestionPage(){var dispatch=useDispatch();var question=useSelector(function(state){return state.questions.viewing;});var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),successfullySubmitted=_React$useState2[0],setSuccessfullySubmitted=_React$useState2[1];//const [question, setQuestion] = React.useState<QuestionData | null>(null);\nvar _useParams=useParams(),questionId=_useParams.questionId;var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,_useForm$formState=_useForm.formState,errors=_useForm$formState.errors,isSubmitting=_useForm$formState.isSubmitting;React.useEffect(function(){var doGetQuestion=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(questionId){var foundQuestion;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(gettingQuestionAction());_context.next=3;return getQuestion(questionId);case 3:foundQuestion=_context.sent;dispatch(gotQuestionAction(foundQuestion));//setQuestion(foundQuestion);\ncase 5:case\"end\":return _context.stop();}}},_callee);}));return function doGetQuestion(_x){return _ref.apply(this,arguments);};}();if(questionId){doGetQuestion(Number(questionId));}//eslint-disable-next-line react-hooks/exhaustive-deps\n},[questionId]);var submitForm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return postAnswer({questionId:question.questionId,content:data.content,userName:'EvaX',created:new Date()});case 2:result=_context2.sent;setSuccessfullySubmitted(result?true:false);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function submitForm(_x2){return _ref2.apply(this,arguments);};}();return _jsx(Page,{children:_jsxs(\"div\",{css:css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n          background-color: white;\\n          padding: 15px 20px 20px 20px;\\n          border-radius: 4px;\\n          border: 1px solid \",\";\\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\\n        \"])),gray6),children:[_jsx(\"div\",{css:css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n            font-size: 19px;\\n            font-weight: bold;\\n            margin: 10px 0px 5px;\\n          \"]))),children:question===null?'':question.title}),question!==null&&_jsxs(React.Fragment,{children:[_jsx(\"p\",{css:css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n                margin-top: 0px;\\n                background-color: white;\\n              \"]))),children:question.content}),_jsx(\"div\",{css:css(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n                font-size: 12px;\\n                font-style: italic;\\n                color: \",\";\\n              \"])),gray3),children:\"Asked by Lerox \".concat(question.userName,\" on\\n  \").concat(question.created.toLocaleDateString(),\" \\n  \").concat(question.created.toLocaleTimeString())}),_jsx(AnswerList,{data:question.answers}),_jsx(\"form\",{onSubmit:handleSubmit(submitForm),css:css(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n                margin-top: 20px;\\n              \"]))),children:_jsxs(FieldSet,{disabled:isSubmitting||successfullySubmitted,children:[_jsxs(FieldContainer,{children:[_jsx(FieldLabel,{htmlFor:\"content\",children:\"Your Answer\"}),_jsx(FieldTextArea,_objectSpread(_objectSpread({},register('content',{required:true,minLength:50})),{},{id:\"content\"})),errors.content&&errors.content.type==='required'&&_jsx(FieldError,{children:\"You must enter the answer\"})]}),_jsx(FormButtonContainer,{children:_jsx(PrimaryButton,{type:\"submit\",children:\"Submit your answer\"})}),successfullySubmitted&&_jsx(SubmissionSuccess,{children:\"Your answer was successfully submitted\"})]})})]})]})});};","map":{"version":3,"sources":["C:/MyApps/reactQandA/clientApp/src/QuestionPage.tsx"],"names":["css","gray3","gray6","FieldSet","FieldContainer","FieldLabel","FieldTextArea","FormButtonContainer","PrimaryButton","FieldError","SubmissionSuccess","Page","useParams","getQuestion","postAnswer","AnswerList","React","useForm","useSelector","useDispatch","gettingQuestionAction","gotQuestionAction","QuestionPage","dispatch","question","state","questions","viewing","useState","successfullySubmitted","setSuccessfullySubmitted","questionId","register","handleSubmit","formState","errors","isSubmitting","useEffect","doGetQuestion","foundQuestion","Number","submitForm","data","content","userName","created","Date","result","title","toLocaleDateString","toLocaleTimeString","answers","required","minLength","type"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport {\r\n  gray3,\r\n  gray6,\r\n  FieldSet,\r\n  FieldContainer,\r\n  FieldLabel,\r\n  FieldTextArea,\r\n  FormButtonContainer,\r\n  PrimaryButton,\r\n  FieldError,\r\n  SubmissionSuccess,\r\n} from './Styles';\r\nimport { Page } from './Page';\r\nimport { useParams } from 'react-router';\r\nimport { getQuestion, postAnswer } from './QuestionData';\r\nimport { AnswerList } from './AnswerList';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState, gettingQuestionAction, gotQuestionAction } from './Store';\r\n\r\ntype FormData = {\r\n  content: string;\r\n};\r\n\r\nexport const QuestionPage = () => {\r\n  const dispatch = useDispatch();\r\n  const question = useSelector((state: AppState) => state.questions.viewing);\r\n  const [successfullySubmitted, setSuccessfullySubmitted] =\r\n    React.useState(false);\r\n  //const [question, setQuestion] = React.useState<QuestionData | null>(null);\r\n  const { questionId } = useParams();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormData>();\r\n\r\n  React.useEffect(() => {\r\n    const doGetQuestion = async (questionId: number) => {\r\n      dispatch(gettingQuestionAction());\r\n      const foundQuestion = await getQuestion(questionId);\r\n      dispatch(gotQuestionAction(foundQuestion));\r\n      //setQuestion(foundQuestion);\r\n    };\r\n    if (questionId) {\r\n      doGetQuestion(Number(questionId));\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [questionId]);\r\n\r\n  const submitForm = async (data: FormData) => {\r\n    const result = await postAnswer({\r\n      questionId: question!.questionId,\r\n      content: data.content,\r\n      userName: 'EvaX',\r\n      created: new Date(),\r\n    });\r\n    setSuccessfullySubmitted(result ? true : false);\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          background-color: white;\r\n          padding: 15px 20px 20px 20px;\r\n          border-radius: 4px;\r\n          border: 1px solid ${gray6};\r\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n        `}\r\n      >\r\n        <div\r\n          css={css`\r\n            font-size: 19px;\r\n            font-weight: bold;\r\n            margin: 10px 0px 5px;\r\n          `}\r\n        >\r\n          {question === null ? '' : question.title}\r\n        </div>\r\n        {question !== null && (\r\n          <React.Fragment>\r\n            <p\r\n              css={css`\r\n                margin-top: 0px;\r\n                background-color: white;\r\n              `}\r\n            >\r\n              {question.content}\r\n            </p>\r\n            <div\r\n              css={css`\r\n                font-size: 12px;\r\n                font-style: italic;\r\n                color: ${gray3};\r\n              `}\r\n            >\r\n              {`Asked by Lerox ${question.userName} on\r\n  ${question.created.toLocaleDateString()} \r\n  ${question.created.toLocaleTimeString()}`}\r\n            </div>\r\n            <AnswerList data={question.answers} />\r\n            <form\r\n              onSubmit={handleSubmit(submitForm)}\r\n              css={css`\r\n                margin-top: 20px;\r\n              `}\r\n            >\r\n              <FieldSet disabled={isSubmitting || successfullySubmitted}>\r\n                <FieldContainer>\r\n                  <FieldLabel htmlFor=\"content\">Your Answer</FieldLabel>\r\n                  <FieldTextArea\r\n                    {...register('content', { required: true, minLength: 50 })}\r\n                    id=\"content\"\r\n                  ></FieldTextArea>\r\n                  {errors.content && errors.content.type === 'required' && (\r\n                    <FieldError>You must enter the answer</FieldError>\r\n                  )}\r\n                </FieldContainer>\r\n                <FormButtonContainer>\r\n                  <PrimaryButton type=\"submit\">\r\n                    Submit your answer\r\n                  </PrimaryButton>\r\n                </FormButtonContainer>\r\n                {successfullySubmitted && (\r\n                  <SubmissionSuccess>\r\n                    Your answer was successfully submitted\r\n                  </SubmissionSuccess>\r\n                )}\r\n              </FieldSet>\r\n            </form>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}