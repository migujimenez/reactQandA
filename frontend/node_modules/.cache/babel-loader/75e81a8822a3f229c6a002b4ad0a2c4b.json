{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyApps\\\\reactQandA\\\\clientApp\\\\src\\\\HomePage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { getUnansweredQuestions } from './QuestionData';\nimport { QuestionList } from './QuestionList';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from './Styles';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n  React.useEffect(() => {\n    const doGetUnansweredeQuestions = async () => {\n      dispatch(gettingUnansweredQuestionsAction());\n      const unansweredQuestions = await getUnansweredQuestions();\n      dispatch(gotUnansweredQuestionsAction(unansweredQuestions)); //setQuestions(unansweredQuestions);\n      //setQuestionsLoading(false);\n    };\n\n    doGetUnansweredeQuestions(); //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  console.log('rendered');\n  const navigate = useNavigate();\n\n  const handleAskQuestionClick = () => {\n    //console.log('TODO - move to the AskPage');\n    navigate('ask');\n  };\n\n  return _jsxDEV(Page, {\n    children: [_jsxDEV(\"div\", {\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `,\n      children: [_jsxDEV(PageTitle, {\n        children: \"Unanswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), _jsxDEV(PrimaryButton, {\n        onClick: handleAskQuestionClick,\n        children: \"Ask a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), questionsLoading ? _jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : _jsxDEV(QuestionList, {\n      data: questions || [] //renderItem={(question) => <div>{question.title}</div>}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"FOba8qekGaS9gnkOL9JIgzizARY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = HomePage;\n\nfunction state(state, AppState) {\n  throw new Error('Function not implemented.');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/MyApps/reactQandA/clientApp/src/HomePage.tsx"],"names":["css","React","getUnansweredQuestions","QuestionList","Page","PageTitle","PrimaryButton","useNavigate","HomePage","questions","setQuestions","useState","questionsLoading","setQuestionsLoading","useEffect","doGetUnansweredeQuestions","dispatch","gettingUnansweredQuestionsAction","unansweredQuestions","gotUnansweredQuestionsAction","console","log","navigate","handleAskQuestionClick","state","AppState","Error"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAqD,gBAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAA+B,EAA/B,CAAlC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,KAAK,CAACU,QAAN,CAAe,IAAf,CAAhD;AAEAV,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,UAAMC,yBAAyB,GAAG,YAAY;AAC5CC,MAAAA,QAAQ,CAACC,gCAAgC,EAAjC,CAAR;AACA,YAAMC,mBAAmB,GAAG,MAAMhB,sBAAsB,EAAxD;AACAc,MAAAA,QAAQ,CAACG,4BAA4B,CAACD,mBAAD,CAA7B,CAAR,CAH4C,CAI5C;AACA;AACD,KAND;;AAOAH,IAAAA,yBAAyB,GARL,CASpB;AACD,GAVD,EAUG,EAVH;AAYAK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,sBAAsB,GAAG,MAAM;AACnC;AACAD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAKA,SACE,QAAC,IAAD;AAAA,eACE;AACE,MAAA,GAAG,EAAEtB,GAAI;AACjB;AACA;AACA;AACA,SALM;AAAA,iBAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEuB,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGX,gBAAgB,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,GAGf,QAAC,YAAD;AACE,MAAA,IAAI,EAAEH,SAAS,IAAI,EADrB,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAjDM;;GAAMD,Q;UAkBMD,W;;;KAlBNC,Q;;AAkDb,SAASgB,KAAT,CAAeA,KAAf,EAA2BC,QAA3B,EAA0C;AACxC,QAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport { getUnansweredQuestions, QuestionData } from './QuestionData';\r\nimport { QuestionList } from './QuestionList';\r\nimport { Page } from './Page';\r\nimport { PageTitle } from './PageTitle';\r\nimport { PrimaryButton } from './Styles';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const HomePage = () => {\r\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\r\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const doGetUnansweredeQuestions = async () => {\r\n      dispatch(gettingUnansweredQuestionsAction());\r\n      const unansweredQuestions = await getUnansweredQuestions();\r\n      dispatch(gotUnansweredQuestionsAction(unansweredQuestions));\r\n      //setQuestions(unansweredQuestions);\r\n      //setQuestionsLoading(false);\r\n    };\r\n    doGetUnansweredeQuestions();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  console.log('rendered');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleAskQuestionClick = () => {\r\n    //console.log('TODO - move to the AskPage');\r\n    navigate('ask');\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n        `}\r\n      >\r\n        <PageTitle>Unanswered Questions</PageTitle>\r\n        <PrimaryButton onClick={handleAskQuestionClick}>\r\n          Ask a question\r\n        </PrimaryButton>\r\n      </div>\r\n      {questionsLoading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <QuestionList\r\n          data={questions || []}\r\n          //renderItem={(question) => <div>{question.title}</div>}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\nfunction state(state: any, AppState: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]},"metadata":{},"sourceType":"module"}