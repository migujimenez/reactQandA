{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/MyApps/reactQandA/clientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _templateObject;/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import React from'react';import{getUnansweredQuestions}from'./QuestionData';import{QuestionList}from'./QuestionList';import{Page}from'./Page';import{PageTitle}from'./PageTitle';import{PrimaryButton}from'./Styles';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{gettingUnansweredQuestionsAction,gotUnansweredQuestionsAction}from'./Store';import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";import{jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";export var HomePage=function HomePage(){var dispatch=useDispatch();//const [questions, setQuestions] = React.useState<QuestionData[]>([]);\nvar questions=useSelector(function(state){return state.questions.unanswered;});//const [questionsLoading, setQuestionsLoading] = React.useState(true);\nvar questionsLoading=useSelector(function(state){return state.questions.loading;});React.useEffect(function(){var doGetUnansweredeQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var unansweredQuestions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(gettingUnansweredQuestionsAction());_context.next=3;return getUnansweredQuestions();case 3:unansweredQuestions=_context.sent;dispatch(gotUnansweredQuestionsAction(unansweredQuestions));//setQuestions(unansweredQuestions);\n//setQuestionsLoading(false);\ncase 5:case\"end\":return _context.stop();}}},_callee);}));return function doGetUnansweredeQuestions(){return _ref.apply(this,arguments);};}();doGetUnansweredeQuestions();//eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);console.log('rendered');var navigate=useNavigate();var handleAskQuestionClick=function handleAskQuestionClick(){//console.log('TODO - move to the AskPage');\nnavigate('ask');};return _jsxs(Page,{children:[_jsxs(\"div\",{css:css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n        \"]))),children:[_jsx(PageTitle,{children:\"Unanswered Questions\"}),_jsx(PrimaryButton,{onClick:handleAskQuestionClick,children:\"Ask a question\"})]}),questionsLoading?_jsx(\"div\",{children:\"Loading...\"}):_jsx(QuestionList,{data:questions||[]//renderItem={(question) => <div>{question.title}</div>}\n})]});};function state(state,AppState){throw new Error('Function not implemented.');}","map":{"version":3,"sources":["C:/MyApps/reactQandA/clientApp/src/HomePage.tsx"],"names":["css","React","getUnansweredQuestions","QuestionList","Page","PageTitle","PrimaryButton","useNavigate","useSelector","useDispatch","gettingUnansweredQuestionsAction","gotUnansweredQuestionsAction","HomePage","dispatch","questions","state","unanswered","questionsLoading","loading","useEffect","doGetUnansweredeQuestions","unansweredQuestions","console","log","navigate","handleAskQuestionClick","AppState","Error"],"mappings":"geAAA,sCACA,OAASA,GAAT,KAAoB,gBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,sBAAT,KAAqD,gBAArD,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,aAAT,KAA8B,UAA9B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,gCADF,CAEEC,4BAFF,KAIO,SAJP,C,0GAOA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA;AACA,GAAMK,CAAAA,SAAS,CAAGN,WAAW,CAC3B,SAACO,KAAD,QAAqBA,CAAAA,KAAK,CAACD,SAAN,CAAgBE,UAArC,EAD2B,CAA7B,CAIA;AACA,GAAMC,CAAAA,gBAAgB,CAAGT,WAAW,CAClC,SAACO,KAAD,QAAqBA,CAAAA,KAAK,CAACD,SAAN,CAAgBI,OAArC,EADkC,CAApC,CAIAjB,KAAK,CAACkB,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,yBAAyB,0FAAG,2JAChCP,QAAQ,CAACH,gCAAgC,EAAjC,CAAR,CADgC,sBAEER,CAAAA,sBAAsB,EAFxB,QAE1BmB,mBAF0B,eAGhCR,QAAQ,CAACF,4BAA4B,CAACU,mBAAD,CAA7B,CAAR,CACA;AACA;AALgC,sDAAH,kBAAzBD,CAAAA,yBAAyB,0CAA/B,CAOAA,yBAAyB,GACzB;AACD,CAVD,CAUG,EAVH,EAYAE,OAAO,CAACC,GAAR,CAAY,UAAZ,EAEA,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAEA,GAAMkB,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnC;AACAD,QAAQ,CAAC,KAAD,CAAR,CACD,CAHD,CAKA,MACE,OAAC,IAAD,YACE,aACE,GAAG,CAAExB,GAAF,gLADL,WAOE,KAAC,SAAD,mCAPF,CAQE,KAAC,aAAD,EAAe,OAAO,CAAEyB,sBAAxB,4BARF,GADF,CAaGR,gBAAgB,CACf,mCADe,CAGf,KAAC,YAAD,EACE,IAAI,CAAEH,SAAS,EAAI,EACnB;AAFF,EAhBJ,GADF,CAwBD,CAzDM,CA0DP,QAASC,CAAAA,KAAT,CAAeA,KAAf,CAA2BW,QAA3B,CAA0C,CACxC,KAAM,IAAIC,CAAAA,KAAJ,CAAU,2BAAV,CAAN,CACD","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport { getUnansweredQuestions, QuestionData } from './QuestionData';\r\nimport { QuestionList } from './QuestionList';\r\nimport { Page } from './Page';\r\nimport { PageTitle } from './PageTitle';\r\nimport { PrimaryButton } from './Styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  gettingUnansweredQuestionsAction,\r\n  gotUnansweredQuestionsAction,\r\n  AppState,\r\n} from './Store';\r\nimport { statement } from '@babel/template';\r\n\r\nexport const HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  //const [questions, setQuestions] = React.useState<QuestionData[]>([]);\r\n  const questions = useSelector(\r\n    (state: AppState) => state.questions.unanswered,\r\n  );\r\n\r\n  //const [questionsLoading, setQuestionsLoading] = React.useState(true);\r\n  const questionsLoading = useSelector(\r\n    (state: AppState) => state.questions.loading,\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const doGetUnansweredeQuestions = async () => {\r\n      dispatch(gettingUnansweredQuestionsAction());\r\n      const unansweredQuestions = await getUnansweredQuestions();\r\n      dispatch(gotUnansweredQuestionsAction(unansweredQuestions));\r\n      //setQuestions(unansweredQuestions);\r\n      //setQuestionsLoading(false);\r\n    };\r\n    doGetUnansweredeQuestions();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  console.log('rendered');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleAskQuestionClick = () => {\r\n    //console.log('TODO - move to the AskPage');\r\n    navigate('ask');\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n        `}\r\n      >\r\n        <PageTitle>Unanswered Questions</PageTitle>\r\n        <PrimaryButton onClick={handleAskQuestionClick}>\r\n          Ask a question\r\n        </PrimaryButton>\r\n      </div>\r\n      {questionsLoading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <QuestionList\r\n          data={questions || []}\r\n          //renderItem={(question) => <div>{question.title}</div>}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\nfunction state(state: any, AppState: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"]},"metadata":{},"sourceType":"module"}